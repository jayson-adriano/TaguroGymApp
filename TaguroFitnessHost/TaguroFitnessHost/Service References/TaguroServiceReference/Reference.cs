//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TaguroFitnessHost.TaguroServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TaguroServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/hello", ReplyAction="http://tempuri.org/IService/helloResponse")]
        string hello();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/hello", ReplyAction="http://tempuri.org/IService/helloResponse")]
        System.Threading.Tasks.Task<string> helloAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/LogIn", ReplyAction="http://tempuri.org/IService/LogInResponse")]
        string LogIn(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/LogIn", ReplyAction="http://tempuri.org/IService/LogInResponse")]
        System.Threading.Tasks.Task<string> LogInAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Register", ReplyAction="http://tempuri.org/IService/RegisterResponse")]
        string Register(string lastName, string firstName, string middleName, string userName, string password, string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Register", ReplyAction="http://tempuri.org/IService/RegisterResponse")]
        System.Threading.Tasks.Task<string> RegisterAsync(string lastName, string firstName, string middleName, string userName, string password, string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ShowCourseByTime", ReplyAction="http://tempuri.org/IService/ShowCourseByTimeResponse")]
        string[] ShowCourseByTime(string time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ShowCourseByTime", ReplyAction="http://tempuri.org/IService/ShowCourseByTimeResponse")]
        System.Threading.Tasks.Task<string[]> ShowCourseByTimeAsync(string time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ShowCourseDescriptionAndPrice", ReplyAction="http://tempuri.org/IService/ShowCourseDescriptionAndPriceResponse")]
        string[] ShowCourseDescriptionAndPrice(string courseCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ShowCourseDescriptionAndPrice", ReplyAction="http://tempuri.org/IService/ShowCourseDescriptionAndPriceResponse")]
        System.Threading.Tasks.Task<string[]> ShowCourseDescriptionAndPriceAsync(string courseCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ShowCourseByInstructor", ReplyAction="http://tempuri.org/IService/ShowCourseByInstructorResponse")]
        string[] ShowCourseByInstructor(string firstName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ShowCourseByInstructor", ReplyAction="http://tempuri.org/IService/ShowCourseByInstructorResponse")]
        System.Threading.Tasks.Task<string[]> ShowCourseByInstructorAsync(string firstName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ShowInstructors", ReplyAction="http://tempuri.org/IService/ShowInstructorsResponse")]
        string[] ShowInstructors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ShowInstructors", ReplyAction="http://tempuri.org/IService/ShowInstructorsResponse")]
        System.Threading.Tasks.Task<string[]> ShowInstructorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddCourseToSched", ReplyAction="http://tempuri.org/IService/AddCourseToSchedResponse")]
        string AddCourseToSched(string courseCode, string custID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddCourseToSched", ReplyAction="http://tempuri.org/IService/AddCourseToSchedResponse")]
        System.Threading.Tasks.Task<string> AddCourseToSchedAsync(string courseCode, string custID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getCustomerID", ReplyAction="http://tempuri.org/IService/getCustomerIDResponse")]
        string getCustomerID(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getCustomerID", ReplyAction="http://tempuri.org/IService/getCustomerIDResponse")]
        System.Threading.Tasks.Task<string> getCustomerIDAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BindEnrollSched", ReplyAction="http://tempuri.org/IService/BindEnrollSchedResponse")]
        string[] BindEnrollSched(string custID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BindEnrollSched", ReplyAction="http://tempuri.org/IService/BindEnrollSchedResponse")]
        System.Threading.Tasks.Task<string[]> BindEnrollSchedAsync(string custID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ViewCustomerProfile", ReplyAction="http://tempuri.org/IService/ViewCustomerProfileResponse")]
        string[] ViewCustomerProfile(string custID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ViewCustomerProfile", ReplyAction="http://tempuri.org/IService/ViewCustomerProfileResponse")]
        System.Threading.Tasks.Task<string[]> ViewCustomerProfileAsync(string custID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ViewCustomerSchedule", ReplyAction="http://tempuri.org/IService/ViewCustomerScheduleResponse")]
        string[] ViewCustomerSchedule(string custID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ViewCustomerSchedule", ReplyAction="http://tempuri.org/IService/ViewCustomerScheduleResponse")]
        System.Threading.Tasks.Task<string[]> ViewCustomerScheduleAsync(string custID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ComputeTotal", ReplyAction="http://tempuri.org/IService/ComputeTotalResponse")]
        string ComputeTotal(string custID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ComputeTotal", ReplyAction="http://tempuri.org/IService/ComputeTotalResponse")]
        System.Threading.Tasks.Task<string> ComputeTotalAsync(string custID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CheckIfDiscounted", ReplyAction="http://tempuri.org/IService/CheckIfDiscountedResponse")]
        string CheckIfDiscounted(string custID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CheckIfDiscounted", ReplyAction="http://tempuri.org/IService/CheckIfDiscountedResponse")]
        System.Threading.Tasks.Task<string> CheckIfDiscountedAsync(string custID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ComputeDiscounted", ReplyAction="http://tempuri.org/IService/ComputeDiscountedResponse")]
        string ComputeDiscounted(string custID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ComputeDiscounted", ReplyAction="http://tempuri.org/IService/ComputeDiscountedResponse")]
        System.Threading.Tasks.Task<string> ComputeDiscountedAsync(string custID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCoursePrice", ReplyAction="http://tempuri.org/IService/GetCoursePriceResponse")]
        string GetCoursePrice(string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCoursePrice", ReplyAction="http://tempuri.org/IService/GetCoursePriceResponse")]
        System.Threading.Tasks.Task<string> GetCoursePriceAsync(string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateInventoryCredit", ReplyAction="http://tempuri.org/IService/UpdateInventoryCreditResponse")]
        string UpdateInventoryCredit(string custID, string amount, string credit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateInventoryCredit", ReplyAction="http://tempuri.org/IService/UpdateInventoryCreditResponse")]
        System.Threading.Tasks.Task<string> UpdateInventoryCreditAsync(string custID, string amount, string credit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateInventoryGym", ReplyAction="http://tempuri.org/IService/UpdateInventoryGymResponse")]
        string UpdateInventoryGym(string custID, string amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateInventoryGym", ReplyAction="http://tempuri.org/IService/UpdateInventoryGymResponse")]
        System.Threading.Tasks.Task<string> UpdateInventoryGymAsync(string custID, string amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ViewInventory", ReplyAction="http://tempuri.org/IService/ViewInventoryResponse")]
        string[] ViewInventory(string custID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ViewInventory", ReplyAction="http://tempuri.org/IService/ViewInventoryResponse")]
        System.Threading.Tasks.Task<string[]> ViewInventoryAsync(string custID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetQuizQuestions", ReplyAction="http://tempuri.org/IService/GetQuizQuestionsResponse")]
        string[] GetQuizQuestions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetQuizQuestions", ReplyAction="http://tempuri.org/IService/GetQuizQuestionsResponse")]
        System.Threading.Tasks.Task<string[]> GetQuizQuestionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PromoAvailed", ReplyAction="http://tempuri.org/IService/PromoAvailedResponse")]
        string PromoAvailed(string custID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PromoAvailed", ReplyAction="http://tempuri.org/IService/PromoAvailedResponse")]
        System.Threading.Tasks.Task<string> PromoAvailedAsync(string custID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SubmitFeedback", ReplyAction="http://tempuri.org/IService/SubmitFeedbackResponse")]
        string SubmitFeedback(string feedback, string custID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SubmitFeedback", ReplyAction="http://tempuri.org/IService/SubmitFeedbackResponse")]
        System.Threading.Tasks.Task<string> SubmitFeedbackAsync(string feedback, string custID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRandomFeedback", ReplyAction="http://tempuri.org/IService/GetRandomFeedbackResponse")]
        string[] GetRandomFeedback();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRandomFeedback", ReplyAction="http://tempuri.org/IService/GetRandomFeedbackResponse")]
        System.Threading.Tasks.Task<string[]> GetRandomFeedbackAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditProfile", ReplyAction="http://tempuri.org/IService/EditProfileResponse")]
        string EditProfile(string custID, string lastName, string firstName, string middleName, string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditProfile", ReplyAction="http://tempuri.org/IService/EditProfileResponse")]
        System.Threading.Tasks.Task<string> EditProfileAsync(string custID, string lastName, string firstName, string middleName, string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ClearSchedule", ReplyAction="http://tempuri.org/IService/ClearScheduleResponse")]
        string ClearSchedule(string custID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ClearSchedule", ReplyAction="http://tempuri.org/IService/ClearScheduleResponse")]
        System.Threading.Tasks.Task<string> ClearScheduleAsync(string custID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/logInAdmin", ReplyAction="http://tempuri.org/IService/logInAdminResponse")]
        int logInAdmin(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/logInAdmin", ReplyAction="http://tempuri.org/IService/logInAdminResponse")]
        System.Threading.Tasks.Task<int> logInAdminAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddCourse", ReplyAction="http://tempuri.org/IService/AddCourseResponse")]
        System.Data.DataTable AddCourse(string courseId, string day, string time, int price, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddCourse", ReplyAction="http://tempuri.org/IService/AddCourseResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> AddCourseAsync(string courseId, string day, string time, int price, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddInstructor", ReplyAction="http://tempuri.org/IService/AddInstructorResponse")]
        string AddInstructor(string lastName, string firstName, string middleName, string email, string month, string day, string year, string userName, string password, string gender, string password2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddInstructor", ReplyAction="http://tempuri.org/IService/AddInstructorResponse")]
        System.Threading.Tasks.Task<string> AddInstructorAsync(string lastName, string firstName, string middleName, string email, string month, string day, string year, string userName, string password, string gender, string password2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getInstructorID", ReplyAction="http://tempuri.org/IService/getInstructorIDResponse")]
        string getInstructorID(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getInstructorID", ReplyAction="http://tempuri.org/IService/getInstructorIDResponse")]
        System.Threading.Tasks.Task<string> getInstructorIDAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AdminPopulateSchedTable", ReplyAction="http://tempuri.org/IService/AdminPopulateSchedTableResponse")]
        string AdminPopulateSchedTable(int instID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AdminPopulateSchedTable", ReplyAction="http://tempuri.org/IService/AdminPopulateSchedTableResponse")]
        System.Threading.Tasks.Task<string> AdminPopulateSchedTableAsync(int instID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ViewCourses", ReplyAction="http://tempuri.org/IService/ViewCoursesResponse")]
        System.Data.DataTable ViewCourses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ViewCourses", ReplyAction="http://tempuri.org/IService/ViewCoursesResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> ViewCoursesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RemoveCourse", ReplyAction="http://tempuri.org/IService/RemoveCourseResponse")]
        System.Data.DataTable RemoveCourse(string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RemoveCourse", ReplyAction="http://tempuri.org/IService/RemoveCourseResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> RemoveCourseAsync(string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ViewPaymentRequest", ReplyAction="http://tempuri.org/IService/ViewPaymentRequestResponse")]
        System.Data.DataTable ViewPaymentRequest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ViewPaymentRequest", ReplyAction="http://tempuri.org/IService/ViewPaymentRequestResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> ViewPaymentRequestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditPaymentStatus", ReplyAction="http://tempuri.org/IService/EditPaymentStatusResponse")]
        System.Data.DataTable EditPaymentStatus(int salesID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditPaymentStatus", ReplyAction="http://tempuri.org/IService/EditPaymentStatusResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> EditPaymentStatusAsync(int salesID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ViewInventoryAdmin", ReplyAction="http://tempuri.org/IService/ViewInventoryAdminResponse")]
        System.Data.DataTable ViewInventoryAdmin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ViewInventoryAdmin", ReplyAction="http://tempuri.org/IService/ViewInventoryAdminResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> ViewInventoryAdminAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ViewAvailableCourses", ReplyAction="http://tempuri.org/IService/ViewAvailableCoursesResponse")]
        System.Data.DataTable ViewAvailableCourses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ViewAvailableCourses", ReplyAction="http://tempuri.org/IService/ViewAvailableCoursesResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> ViewAvailableCoursesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ChooseCourse", ReplyAction="http://tempuri.org/IService/ChooseCourseResponse")]
        string ChooseCourse(string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ChooseCourse", ReplyAction="http://tempuri.org/IService/ChooseCourseResponse")]
        System.Threading.Tasks.Task<string> ChooseCourseAsync(string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ViewAvailableInstructors", ReplyAction="http://tempuri.org/IService/ViewAvailableInstructorsResponse")]
        System.Data.DataTable ViewAvailableInstructors(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ViewAvailableInstructors", ReplyAction="http://tempuri.org/IService/ViewAvailableInstructorsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> ViewAvailableInstructorsAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AssignCourse", ReplyAction="http://tempuri.org/IService/AssignCourseResponse")]
        void AssignCourse(int insID, string courseCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AssignCourse", ReplyAction="http://tempuri.org/IService/AssignCourseResponse")]
        System.Threading.Tasks.Task AssignCourseAsync(int insID, string courseCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : TaguroFitnessHost.TaguroServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<TaguroFitnessHost.TaguroServiceReference.IService>, TaguroFitnessHost.TaguroServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string hello() {
            return base.Channel.hello();
        }
        
        public System.Threading.Tasks.Task<string> helloAsync() {
            return base.Channel.helloAsync();
        }
        
        public string LogIn(string userName, string password) {
            return base.Channel.LogIn(userName, password);
        }
        
        public System.Threading.Tasks.Task<string> LogInAsync(string userName, string password) {
            return base.Channel.LogInAsync(userName, password);
        }
        
        public string Register(string lastName, string firstName, string middleName, string userName, string password, string emailAddress) {
            return base.Channel.Register(lastName, firstName, middleName, userName, password, emailAddress);
        }
        
        public System.Threading.Tasks.Task<string> RegisterAsync(string lastName, string firstName, string middleName, string userName, string password, string emailAddress) {
            return base.Channel.RegisterAsync(lastName, firstName, middleName, userName, password, emailAddress);
        }
        
        public string[] ShowCourseByTime(string time) {
            return base.Channel.ShowCourseByTime(time);
        }
        
        public System.Threading.Tasks.Task<string[]> ShowCourseByTimeAsync(string time) {
            return base.Channel.ShowCourseByTimeAsync(time);
        }
        
        public string[] ShowCourseDescriptionAndPrice(string courseCode) {
            return base.Channel.ShowCourseDescriptionAndPrice(courseCode);
        }
        
        public System.Threading.Tasks.Task<string[]> ShowCourseDescriptionAndPriceAsync(string courseCode) {
            return base.Channel.ShowCourseDescriptionAndPriceAsync(courseCode);
        }
        
        public string[] ShowCourseByInstructor(string firstName) {
            return base.Channel.ShowCourseByInstructor(firstName);
        }
        
        public System.Threading.Tasks.Task<string[]> ShowCourseByInstructorAsync(string firstName) {
            return base.Channel.ShowCourseByInstructorAsync(firstName);
        }
        
        public string[] ShowInstructors() {
            return base.Channel.ShowInstructors();
        }
        
        public System.Threading.Tasks.Task<string[]> ShowInstructorsAsync() {
            return base.Channel.ShowInstructorsAsync();
        }
        
        public string AddCourseToSched(string courseCode, string custID) {
            return base.Channel.AddCourseToSched(courseCode, custID);
        }
        
        public System.Threading.Tasks.Task<string> AddCourseToSchedAsync(string courseCode, string custID) {
            return base.Channel.AddCourseToSchedAsync(courseCode, custID);
        }
        
        public string getCustomerID(string userName) {
            return base.Channel.getCustomerID(userName);
        }
        
        public System.Threading.Tasks.Task<string> getCustomerIDAsync(string userName) {
            return base.Channel.getCustomerIDAsync(userName);
        }
        
        public string[] BindEnrollSched(string custID) {
            return base.Channel.BindEnrollSched(custID);
        }
        
        public System.Threading.Tasks.Task<string[]> BindEnrollSchedAsync(string custID) {
            return base.Channel.BindEnrollSchedAsync(custID);
        }
        
        public string[] ViewCustomerProfile(string custID) {
            return base.Channel.ViewCustomerProfile(custID);
        }
        
        public System.Threading.Tasks.Task<string[]> ViewCustomerProfileAsync(string custID) {
            return base.Channel.ViewCustomerProfileAsync(custID);
        }
        
        public string[] ViewCustomerSchedule(string custID) {
            return base.Channel.ViewCustomerSchedule(custID);
        }
        
        public System.Threading.Tasks.Task<string[]> ViewCustomerScheduleAsync(string custID) {
            return base.Channel.ViewCustomerScheduleAsync(custID);
        }
        
        public string ComputeTotal(string custID) {
            return base.Channel.ComputeTotal(custID);
        }
        
        public System.Threading.Tasks.Task<string> ComputeTotalAsync(string custID) {
            return base.Channel.ComputeTotalAsync(custID);
        }
        
        public string CheckIfDiscounted(string custID) {
            return base.Channel.CheckIfDiscounted(custID);
        }
        
        public System.Threading.Tasks.Task<string> CheckIfDiscountedAsync(string custID) {
            return base.Channel.CheckIfDiscountedAsync(custID);
        }
        
        public string ComputeDiscounted(string custID) {
            return base.Channel.ComputeDiscounted(custID);
        }
        
        public System.Threading.Tasks.Task<string> ComputeDiscountedAsync(string custID) {
            return base.Channel.ComputeDiscountedAsync(custID);
        }
        
        public string GetCoursePrice(string courseID) {
            return base.Channel.GetCoursePrice(courseID);
        }
        
        public System.Threading.Tasks.Task<string> GetCoursePriceAsync(string courseID) {
            return base.Channel.GetCoursePriceAsync(courseID);
        }
        
        public string UpdateInventoryCredit(string custID, string amount, string credit) {
            return base.Channel.UpdateInventoryCredit(custID, amount, credit);
        }
        
        public System.Threading.Tasks.Task<string> UpdateInventoryCreditAsync(string custID, string amount, string credit) {
            return base.Channel.UpdateInventoryCreditAsync(custID, amount, credit);
        }
        
        public string UpdateInventoryGym(string custID, string amount) {
            return base.Channel.UpdateInventoryGym(custID, amount);
        }
        
        public System.Threading.Tasks.Task<string> UpdateInventoryGymAsync(string custID, string amount) {
            return base.Channel.UpdateInventoryGymAsync(custID, amount);
        }
        
        public string[] ViewInventory(string custID) {
            return base.Channel.ViewInventory(custID);
        }
        
        public System.Threading.Tasks.Task<string[]> ViewInventoryAsync(string custID) {
            return base.Channel.ViewInventoryAsync(custID);
        }
        
        public string[] GetQuizQuestions() {
            return base.Channel.GetQuizQuestions();
        }
        
        public System.Threading.Tasks.Task<string[]> GetQuizQuestionsAsync() {
            return base.Channel.GetQuizQuestionsAsync();
        }
        
        public string PromoAvailed(string custID) {
            return base.Channel.PromoAvailed(custID);
        }
        
        public System.Threading.Tasks.Task<string> PromoAvailedAsync(string custID) {
            return base.Channel.PromoAvailedAsync(custID);
        }
        
        public string SubmitFeedback(string feedback, string custID) {
            return base.Channel.SubmitFeedback(feedback, custID);
        }
        
        public System.Threading.Tasks.Task<string> SubmitFeedbackAsync(string feedback, string custID) {
            return base.Channel.SubmitFeedbackAsync(feedback, custID);
        }
        
        public string[] GetRandomFeedback() {
            return base.Channel.GetRandomFeedback();
        }
        
        public System.Threading.Tasks.Task<string[]> GetRandomFeedbackAsync() {
            return base.Channel.GetRandomFeedbackAsync();
        }
        
        public string EditProfile(string custID, string lastName, string firstName, string middleName, string emailAddress) {
            return base.Channel.EditProfile(custID, lastName, firstName, middleName, emailAddress);
        }
        
        public System.Threading.Tasks.Task<string> EditProfileAsync(string custID, string lastName, string firstName, string middleName, string emailAddress) {
            return base.Channel.EditProfileAsync(custID, lastName, firstName, middleName, emailAddress);
        }
        
        public string ClearSchedule(string custID) {
            return base.Channel.ClearSchedule(custID);
        }
        
        public System.Threading.Tasks.Task<string> ClearScheduleAsync(string custID) {
            return base.Channel.ClearScheduleAsync(custID);
        }
        
        public int logInAdmin(string userName, string password) {
            return base.Channel.logInAdmin(userName, password);
        }
        
        public System.Threading.Tasks.Task<int> logInAdminAsync(string userName, string password) {
            return base.Channel.logInAdminAsync(userName, password);
        }
        
        public System.Data.DataTable AddCourse(string courseId, string day, string time, int price, string description) {
            return base.Channel.AddCourse(courseId, day, time, price, description);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> AddCourseAsync(string courseId, string day, string time, int price, string description) {
            return base.Channel.AddCourseAsync(courseId, day, time, price, description);
        }
        
        public string AddInstructor(string lastName, string firstName, string middleName, string email, string month, string day, string year, string userName, string password, string gender, string password2) {
            return base.Channel.AddInstructor(lastName, firstName, middleName, email, month, day, year, userName, password, gender, password2);
        }
        
        public System.Threading.Tasks.Task<string> AddInstructorAsync(string lastName, string firstName, string middleName, string email, string month, string day, string year, string userName, string password, string gender, string password2) {
            return base.Channel.AddInstructorAsync(lastName, firstName, middleName, email, month, day, year, userName, password, gender, password2);
        }
        
        public string getInstructorID(string userName) {
            return base.Channel.getInstructorID(userName);
        }
        
        public System.Threading.Tasks.Task<string> getInstructorIDAsync(string userName) {
            return base.Channel.getInstructorIDAsync(userName);
        }
        
        public string AdminPopulateSchedTable(int instID) {
            return base.Channel.AdminPopulateSchedTable(instID);
        }
        
        public System.Threading.Tasks.Task<string> AdminPopulateSchedTableAsync(int instID) {
            return base.Channel.AdminPopulateSchedTableAsync(instID);
        }
        
        public System.Data.DataTable ViewCourses() {
            return base.Channel.ViewCourses();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ViewCoursesAsync() {
            return base.Channel.ViewCoursesAsync();
        }
        
        public System.Data.DataTable RemoveCourse(string courseID) {
            return base.Channel.RemoveCourse(courseID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> RemoveCourseAsync(string courseID) {
            return base.Channel.RemoveCourseAsync(courseID);
        }
        
        public System.Data.DataTable ViewPaymentRequest() {
            return base.Channel.ViewPaymentRequest();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ViewPaymentRequestAsync() {
            return base.Channel.ViewPaymentRequestAsync();
        }
        
        public System.Data.DataTable EditPaymentStatus(int salesID) {
            return base.Channel.EditPaymentStatus(salesID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> EditPaymentStatusAsync(int salesID) {
            return base.Channel.EditPaymentStatusAsync(salesID);
        }
        
        public System.Data.DataTable ViewInventoryAdmin() {
            return base.Channel.ViewInventoryAdmin();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ViewInventoryAdminAsync() {
            return base.Channel.ViewInventoryAdminAsync();
        }
        
        public System.Data.DataTable ViewAvailableCourses() {
            return base.Channel.ViewAvailableCourses();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ViewAvailableCoursesAsync() {
            return base.Channel.ViewAvailableCoursesAsync();
        }
        
        public string ChooseCourse(string courseID) {
            return base.Channel.ChooseCourse(courseID);
        }
        
        public System.Threading.Tasks.Task<string> ChooseCourseAsync(string courseID) {
            return base.Channel.ChooseCourseAsync(courseID);
        }
        
        public System.Data.DataTable ViewAvailableInstructors(string id) {
            return base.Channel.ViewAvailableInstructors(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ViewAvailableInstructorsAsync(string id) {
            return base.Channel.ViewAvailableInstructorsAsync(id);
        }
        
        public void AssignCourse(int insID, string courseCode) {
            base.Channel.AssignCourse(insID, courseCode);
        }
        
        public System.Threading.Tasks.Task AssignCourseAsync(int insID, string courseCode) {
            return base.Channel.AssignCourseAsync(insID, courseCode);
        }
    }
}
